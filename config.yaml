# Claude Cadence Configuration
# This file defines the default settings for checkpoint supervision

# Project settings
project:
  # The root directory of the project being supervised
  # This should be the absolute path to your project (e.g., /home/user/my_project)
  # Both TaskMaster files and Serena will use this path
  root_directory: "/home/ctabone/programming/claude_code/claude_cadence/agr_mcp"

  # Optional: Override the default TaskMaster directory
  # If not set, will use {root_directory}/.taskmaster/tasks/tasks.json
  # taskmaster_file: ".taskmaster/tasks/tasks.json"

# Execution settings
execution:
  # Safety limit: Maximum turns before forcing completion
  # This is NOT a target - agents should complete tasks naturally
  # This only prevents runaway execution
  max_turns: 80
  # Timeout for each execution period (seconds)
  timeout: 600
  # Timeout for subprocess calls (seconds)
  subprocess_timeout: 300
  # Whether to save execution logs
  save_logs: true
  # Log directory (relative to working directory)
  log_dir: ".cadence/logs"

# Agent configuration
agent:
  # Model to use for the main agent execution
  model: "claude-sonnet-4-20250514"  # Use model alias for latest Sonnet
  # Tools available to the agent
  # Comment out any tools you want to disable
  tools:
    - bash
    - read
    - write
    - edit
    - grep
    - glob
    - search
    - mcp
    - WebFetch
  # Additional claude CLI flags
  extra_flags:
    - "--dangerously-skip-permissions"
  # Whether to use --continue flag for agent sessions
  # Set to false to start fresh each time (saves tokens)
  use_continue: false

# Supervisor configuration
supervisor:
  # Model to use for checkpoint analysis
  # Options: "opus", "sonnet", or full names like "claude-sonnet-4-20250514"
  model: "claude-sonnet-4-20250514"  # Use model alias for latest Sonnet
  # Tools available to the supervisor
  tools:
    - bash
    - read
    - write
    - edit
    - grep
    - glob
    - search
    - mcp
    - WebFetch
  # Whether to use --continue flag for supervisor sessions
  # Set to false to start fresh each time (saves tokens)
  use_continue: false
  # Confidence threshold for intervention (0.0-1.0)
  intervention_threshold: 0.7
  # Whether to show detailed analysis
  verbose: true
  # Analysis features to enable
  analysis:
    check_errors: true
    check_task_completion: true
    check_progress_indicators: true
    check_blockers: true

# Task completion detection
task_detection:
  # Methods to use for detecting task completion (in priority order)
  methods:
    - "structured_json"     # Look for {"task_complete": {...}} markers
    - "all_tasks_phrase"    # Look for "ALL TASKS COMPLETE" declaration
    - "keyword_analysis"    # Analyze completion keywords near task references
  # Keywords that indicate completion
  completion_keywords:
    - "completed"
    - "done"
    - "finished"
    - "implemented"
    - "fixed"
    - "resolved"
    - "added"
    - "created"
  # Special phrases for agent status
  completion_phrase: "ALL TASKS COMPLETE"
  help_needed_phrase: "HELP NEEDED"
  stuck_status_phrase: "Status: STUCK"


# Session management
session:
  # Whether to save session summaries
  save_summaries: true
  # Summary directory (relative to working directory)
  summary_dir: ".cadence/sessions"
  # Include checkpoint details in summary
  include_checkpoint_details: true
  # Session ID format (strftime format)
  id_format: "%Y%m%d_%H%M%S"
  # Session file prefix
  file_prefix: "session_"

# Integration settings
integrations:
  # Task Master integration
  taskmaster:
    enabled: true
    # Path to tasks.json file (can be overridden)
    default_task_file: ".taskmaster/tasks/tasks.json"
    # Whether to update task status automatically
    auto_update_status: true
    # Process subtasks instead of main tasks
    process_subtasks: true
    # How to group subtasks for execution
    subtask_grouping: "by_task"  # "by_task" or "by_priority"

  # MCP (Model Context Protocol) settings
  mcp:
    # Supervisor MCP servers (will add mcp__<server>__* automatically)
    supervisor_servers:
      - "taskmaster-ai"  # Task management (supervisor only)
      - "zen"            # Code review and assistance
      - "serena"         # Semantic code analysis
      - "Context7"       # Library documentation

    # Agent MCP servers (will add mcp__<server>__* automatically)
    agent_servers:
      - "taskmaster-ai"  # Task management (agent can now update its own tasks)
      - "serena"         # Semantic code analysis
      - "Context7"       # Library documentation
      # NOTE: Agent does NOT have access to zen (code review remains supervisor-only)

# Prompt customization
prompts:
  # Path to custom prompts.yaml file (optional)
  # Leave empty to use built-in prompts
  custom_prompts_file: ""
  # Whether to include timestamp in prompts
  include_timestamp: true

# Zen integration settings
zen_integration:
  # Number of output lines to include in zen context
  output_lines_limit: 200
  # Lines to check for help requests in scratchpad
  scratchpad_check_lines: 10
  # Cutoff detection settings
  cutoff_indicator_threshold: 3
  last_lines_to_check: 50
  # Error detection settings
  auto_debug_error_threshold: 3
  # Code review frequency - when to run zen code review
  # Options: "none" (disabled), "task" (after each task), "project" (at end of project)
  code_review_frequency: "task"

# Processing settings
processing:
  # Thread join timeout (seconds)
  thread_join_timeout: 5
  # Status check interval (seconds)
  status_check_interval: 30
  # Maximum output truncate length for supervisor analysis
  max_output_truncate_length: 3000
  # Seconds per turn estimate (rough approximation)
  seconds_per_turn_estimate: 30

# Development settings
development:
  # Enable debug output
  debug: false
  # Save raw claude output
  save_raw_output: false
  # Pretty print JSON in logs
  pretty_json: true

# Orchestration settings
orchestration:
  # Supervisor workspace directory (relative to project root)
  supervisor_dir: ".cadence/supervisor"
  # Agent workspace directory (relative to project root)
  agent_dir: ".cadence/agent"
  # Decision output format
  decision_format: "json"
  # Enable zen assistance in orchestration
  enable_zen_assistance: true
  # Maximum orchestration iterations before stopping
  max_iterations: 100
  # Orchestrated mode (required for new architecture)
  mode: "orchestrated"
  # Quick quit detection - if agent/supervisor exits in under this many seconds, it's an error
  quick_quit_seconds: 10.0
