# Claude Cadence Configuration
# This file defines the default settings for checkpoint supervision

# Project settings
project:
  # The root directory of the project being supervised
  # This should be the absolute path to your project (e.g., /home/user/my_project)
  # Both TaskMaster files and Serena will use this path
  root_directory: "/home/ctabone/programming/claude_code/claude_cadence/agr_mcp"

  # Optional: Override the default TaskMaster directory
  # If not set, will use {root_directory}/.taskmaster/tasks/tasks.json
  # taskmaster_file: ".taskmaster/tasks/tasks.json"

# Execution settings
execution:
  # Maximum turns for supervisor when running in direct execution mode
  # (When supervisor executes tasks itself, not in orchestrated mode)
  # This is NOT a target - supervisors should complete tasks naturally
  # This only applies when running supervisor directly, not in orchestrated mode
  max_supervisor_turns: 80
  # Maximum turns for agent execution (safety limit)
  # Default: 120 turns to allow complex tasks to complete
  # This is used when agent is run by the orchestrator
  max_agent_turns: 120
  # Timeout for each execution period (seconds)
  timeout: 600
  # Timeout for subprocess calls (seconds)
  subprocess_timeout: 300
  # Whether to save execution logs
  save_logs: true
  # Log directory (relative to working directory)
  log_dir: ".cadence/logs"
  # Log level for file logging (DEBUG, INFO, WARNING, ERROR, CRITICAL)
  log_level: "INFO"
  # Clean up all logs on startup (useful for development)
  clean_logs_on_startup: true
  # Maximum total size of log directories before cleanup (in MB)
  max_log_size_mb: 20

# Agent configuration
agent:
  # Default settings for all agents
  defaults:
    # Model to use for agent execution
    model: "claude-sonnet-4-20250514"  # Use model alias for latest Sonnet
    # Tools available to the agent
    tools:
      - bash
      - read
      - write
      - edit
      - grep
      - glob
      - search
      - mcp
      - WebFetch
    # Additional claude CLI flags
    extra_flags: []
      # Note: --dangerously-skip-permissions removed for security
    # Number of times orchestrator should retry a failed agent
    retry_count: 1
    # Whether to use --continue flag
    use_continue: false
    # Timeout settings
    timeout_seconds: 300  # 5 minutes
    # Temperature for responses
    temperature: 0.2


# Supervisor configuration
supervisor:
  # Model to use for checkpoint analysis
  # Options: "opus", "sonnet", or full names like "claude-sonnet-4-20250514"
  model: "claude-sonnet-4-20250514"  # Use model alias for latest Sonnet
  # Tools available to the supervisor
  tools:
    - bash
    - read
    - write
    - edit
    - grep
    - glob
    - search
    - mcp
    - WebFetch
  # Whether to use --continue flag for supervisor sessions
  # Set to false to start fresh each time (saves tokens)
  use_continue: false
  # Confidence threshold for intervention (0.0-1.0)
  intervention_threshold: 0.7
  # Whether to show detailed analysis
  verbose: true
  # Analysis features to enable
  analysis:
    check_errors: true
    check_task_completion: true
    check_progress_indicators: true
    check_blockers: true
  # Maximum turns for supervisor - moved from SupervisorDefaults
  max_turns: 40
  # Analysis timeout (seconds) - moved from SupervisorDefaults
  analysis_timeout: 600
  # Maximum consecutive errors before intervention - moved from SupervisorDefaults
  max_consecutive_errors: 3
  # Maximum output lines kept in memory - moved from SupervisorDefaults
  max_output_lines: 10000
  # Streaming output settings - moved from SupervisorDefaults
  stream_buffer_size: 1048576  # 1MB
  output_update_interval: 0.1  # seconds
  # File size limits - moved from SupervisorDefaults
  max_log_size: 52428800  # 50MB
  max_prompt_size: 102400  # 100KB
  # Zen integration settings for supervisor
  zen_integration:
    enabled: true
    stuck_detection: true
    auto_debug_threshold: 3
    cutoff_detection: true
    # Code review frequency - when to run zen code review
    # Options: "none" (disabled), "task" (after each task), "project" (at end of project)
    code_review_frequency: "task"
# Task completion detection
task_detection:
  # Methods to use for detecting task completion (in priority order)
  methods:
    - "structured_json"     # Look for {"task_complete": {...}} markers
    - "all_tasks_phrase"    # Look for "ALL TASKS COMPLETE" declaration
    - "keyword_analysis"    # Analyze completion keywords near task references
  # Keywords that indicate completion
  completion_keywords:
    - "completed"
    - "done"
    - "finished"
    - "implemented"
    - "fixed"
    - "resolved"
    - "added"
    - "created"
  # Special phrases for agent status
  completion_phrase: "ALL TASKS COMPLETE"
  help_needed_phrase: "HELP NEEDED"
  stuck_status_phrase: "Status: STUCK"

# Review Trigger Detection settings
triggers:
  # Custom trigger patterns (will be merged with built-in patterns)
  patterns:
    # Example custom pattern - high priority all caps completion
    - name: "caps_task_complete"
      type: "task_complete"
      pattern: "TASK COMPLETED|IMPLEMENTATION COMPLETE"
      confidence: 0.9
      priority: 12
      enabled: true
      description: "All caps completion markers"

    # Example custom help pattern
    - name: "need_assistance"
      type: "help_needed"
      pattern: "NEED ASSISTANCE|REQUIRE HELP"
      confidence: 0.85
      priority: 8
      enabled: true
      description: "Alternative help request patterns"

    # Example custom error pattern for specific error types
    - name: "permission_error"
      type: "error_pattern"
      pattern: "PermissionError|Permission denied"
      confidence: 0.8
      priority: 30
      enabled: true
      extractors: ["extract_error_details"]
      description: "Permission-related errors"


# Session management
session:
  # Whether to save session summaries
  save_summaries: true
  # Summary directory (relative to working directory)
  summary_dir: ".cadence/sessions"
  # Include checkpoint details in summary
  include_checkpoint_details: true
  # Session ID format (strftime format)
  id_format: "%Y%m%d_%H%M%S"
  # Session file prefix
  file_prefix: "session_"

# Integration settings
integrations:
  # Task Master integration
  taskmaster:
    enabled: true
    # Path to tasks.json file (can be overridden)
    default_task_file: ".taskmaster/tasks/tasks.json"
    # Whether to update task status automatically
    auto_update_status: true
    # Process subtasks instead of main tasks
    process_subtasks: true
    # How to group subtasks for execution
    subtask_grouping: "by_task"  # "by_task" or "by_priority"

  # MCP (Model Context Protocol) settings
  mcp:
    # Supervisor MCP servers (will add mcp__<server>__* automatically)
    supervisor_servers:
      - "taskmaster-ai"  # Task management (supervisor only)
      - "zen"            # Code review and assistance
      - "serena"         # Semantic code analysis
      - "Context7"       # Library documentation

    # Agent MCP servers (will add mcp__<server>__* automatically)
    agent_servers:
      - "taskmaster-ai"  # Task management (agent can now update its own tasks)
      - "serena"         # Semantic code analysis
      - "Context7"       # Library documentation
      # NOTE: Agent does NOT have access to zen (code review remains supervisor-only)

# Prompt customization
prompts:
  # Path to custom prompts.yaml file (optional)
  # Leave empty to use built-in prompts
  custom_prompts_file: ""
  # Whether to include timestamp in prompts
  include_timestamp: true
  # Safety limit message - moved from AgentPromptDefaults
  safety_limit_message: "You have up to {max_turns} turns as a safety limit (not a target)"
  # Prompt section headers - moved from AgentPromptDefaults
  supervisor_guidance_header: "=== SUPERVISOR GUIDANCE ==="
  task_guidelines_header: "=== TASK EXECUTION GUIDELINES ==="
  todo_list_header: "=== YOUR TODOS ==="

# File patterns
file_patterns:
  # File naming patterns - moved from FilePatterns class
  decision_file: "decision_{session_id}.json"
  agent_result_file: "agent_result_{session_id}.json"
  prompt_file: "prompt_{session_id}.txt"
  output_file: "output_{session_id}.log"
  error_file: "error_{session_id}.log"
  supervisor_log_file: "supervisor_{timestamp}.log"
# Zen processing configuration settings
zen_processing_config:
  # Number of output lines to include in zen context
  output_lines_limit: 200
  # Lines to check for help requests in scratchpad
  scratchpad_check_lines: 10
  # Cutoff detection settings
  cutoff_indicator_threshold: 3
  last_lines_to_check: 50
  # Error detection settings
  auto_debug_error_threshold: 3
  # Models for code review (no fallbacks)
  primary_review_model: "gemini-2.5-pro"
  secondary_review_model: "o3"
  # Model for debugging
  debug_model: "o3"
  # Model for analysis
  analyze_model: "o3"
  # Models for consensus (multiple perspectives)
  consensus_models:
    - "o3"
    - "gemini-2.5-pro"
  # Max retries for Zen operations - moved from ZenIntegrationDefaults
  max_retries: 3
  # Retry delay (seconds) - moved from ZenIntegrationDefaults
  retry_delay: 1.0
  # Request timeout (seconds) - moved from ZenIntegrationDefaults
  request_timeout: 300
  # Default thinking mode - moved from ZenIntegrationDefaults
  default_thinking_mode: "high"
  # Default temperature - moved from ZenIntegrationDefaults
  default_temperature: 0.7
  # Help needed threshold - moved from ZenIntegrationDefaults
  help_needed_threshold: 3
# Processing settings
processing:
  # Thread join timeout (seconds)
  thread_join_timeout: 5
  # Status check interval (seconds) - moved from SupervisorDefaults
  status_check_interval: 30
  # Maximum output truncate length for supervisor analysis
  max_output_truncate_length: 3000
  # Seconds per turn estimate (rough approximation)
  seconds_per_turn_estimate: 30
  # Code file extensions for file filtering
  code_file_extensions:
    - ".py"
    - ".js"
    - ".ts"
    - ".java"
    - ".cpp"
    - ".c"
    - ".h"
    - ".php"
    - ".rb"
    - ".go"
    - ".rs"
    - ".cs"
# Development settings
development:
  # Enable debug output
  debug: false
  # Save raw claude output
  save_raw_output: false
  # Pretty print JSON in logs
  pretty_json: true


# Orchestration settings
orchestration:
  # Supervisor workspace directory (relative to project root)
  supervisor_dir: ".cadence/supervisor"
  # Agent workspace directory (relative to project root)
  agent_dir: ".cadence/agent"
  # Decision output format
  decision_format: "json"
  # Enable zen assistance in orchestration
  enable_zen_assistance: true
  # Maximum orchestration iterations before stopping
  # This is how many times the orchestrator will loop between supervisor and agent
  # Each iteration: supervisor analyzes → decides action → agent executes → repeat
  max_iterations: 100
  # Orchestrated mode (required for new architecture)
  mode: "orchestrated"
  # Quick quit detection - if agent/supervisor exits in under this many seconds, it's an error
  quick_quit_seconds: 30.0
  # Session timeout (seconds) - moved from OrchestratorDefaults
  session_timeout: 300
  # Number of sessions to keep during cleanup - moved from OrchestratorDefaults
  cleanup_keep_sessions: 5

# Retry behavior configuration
retry_behavior:
  # Maximum number of JSON parsing retries
  max_json_retries: 3
  # Retry strategy: "linear" or "exponential"
  backoff_strategy: "linear"
  # Base delay in seconds between retries
  base_delay: 2
  # Maximum delay in seconds (for exponential backoff)
  max_delay: 60
  # Whether to use --continue flag on JSON parsing failures
  use_continue_on_failure: true
  # Timeout for subprocess retries (seconds)
  subprocess_timeout: 300
  # Maximum retries for file operations
  max_file_retries: 3
  # Enable detailed retry logging
  verbose_logging: false

# Scratchpad retry configuration
scratchpad_retry:
  # Maximum number of retries to create scratchpad
  max_retries: 5
  # Tools allowed for scratchpad creation
  allowed_tools: "Write,Read,Bash,LS"
  # Maximum turns for scratchpad retry
  max_turns: 5
